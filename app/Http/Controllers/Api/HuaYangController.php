<?php
/**
 * Created by PhpStorm.
 * User: lishengbin
 * Date: 19/10/29
 * Time: 下午8:03
 */

namespace App\Http\Controllers\Api;


use Core\Http\Components\GlobalConstant;
use Core\Util\AliLeagueChain;
use Core\Util\ApiRequestServer;
use Illuminate\Support\Facades\Log;

class HuaYangController extends BaseController
{

    public function index()
    {
//        dd(1);
//        $rel = self::deploySolid();//部署智能合约
//          $rel = self::asyncSolid();//调用合约
//        $rel = self::queryTransaction();//查询交易
//        $rel = self::queryReceipt();//查询交易回执
        $rel = self::parseOutput();//解析合约返回值
        return $this->responseJson(0, '', $rel);
    }

    public function sendGameServer()
    {
        //php后台请求WebServer，WebServer转发给其他服务器处理
        //参数说明：
        //_action  --操作
        //_time  --时间
        //_sign --key+时间的MD5码
        //_servertype --转发的server类型 与_serverid互斥
        //_serverid --转发的serverid 与_servertype互斥
        //[如果_servertype和_serverid两个参数都没有，则转发给所有服务器]
        //_data   --需要处理的data数据，json格式
        //WebOpenKey  php请求游戏服            WCHY2022
        //==================================================================
        //_action：sysGMCmd
        //_data={}
        //"cmd":
        //"reloadScripts" --重载脚本
        //"stopGame "--停止服务
        //"maintainGame" --服务器维护
        //"forbidEnter" --服务器禁止进入游戏
        //"kickAll" --踢出所有人
        //"kickUser" --踢出玩家 “sid”--玩家uid
        //"rollMsg" --滚动消息
        // 	   --消息类型互斥“all”--群发广播 “sid”--玩家uid，单独玩家广播 “arrSid”--玩家uid数组，json格式，批量玩家广播
        $time       = time();
        $sendParam  = [
            '_action' => 'sysGMCmd',
            '_time'   => $time,
            '_sign'   => md5(GlobalConstant::SERVER_KEY . $time),
            '_data'   => json_encode(['key1' => 111]),
        ];
        $apiRequest = new ApiRequestServer();
        $rel        = $apiRequest->sendRequest($sendParam);
        return $this->responseJson(0, '', $rel);
    }

    public function getBytes($str)
    {
        $len   = strlen($str);
        $bytes = array();
        for ($i = 0; $i < $len; $i++) {
            if (ord($str[$i]) >= 128) {
                $byte = ord($str[$i]) - 256;
            } else {
                $byte = ord($str[$i]);
            }
            $bytes[] = $byte;
        }
        return $bytes;
    }

    private function getByteUtf8($data){
        // 待签名数据以UTF-8的格式转字节流
        $bytes = unpack("c*", $data);
        $str = '';
        foreach ($bytes as $ch) {
            $str .= chr($ch);
        }
        return $str;
    }

    private static function deploySolid()
    {
        $api = new AliLeagueChain();
        $api->setRequestUrl('ForBiz');
        $contractCode = '0x608060405234801561001057600080fd5b50610856806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806388abe76f1461003b578063fcd7e3c114610210575b600080fd5b6101956004803603606081101561005157600080fd5b810190808035906020019064010000000081111561006e57600080fd5b82018360208201111561008057600080fd5b803590602001918460018302840111640100000000831117156100a257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561010557600080fd5b82018360208201111561011757600080fd5b8035906020019184600183028401116401000000008311171561013957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019092919050505061034b565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101d55780820151818401526020810190506101ba565b50505050905090810190601f1680156102025780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102c96004803603602081101561022657600080fd5b810190808035906020019064010000000081111561024357600080fd5b82018360208201111561025557600080fd5b8035906020019184600183028401116401000000008311171561027757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610573565b6040518080602001838152602001828103825284818151815260200191508051906020019080838360005b8381101561030f5780820151818401526020810190506102f4565b50505050905090810190601f16801561033c5780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b606061035561075a565b84816000018190525083816020018190525082816040018181525050806000866040518082805190602001908083835b602083106103a85780518252602082019150602081019050602083039250610385565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060008201518160000190805190602001906103f792919061077b565b50602082015181600101908051906020019061041492919061077b565b50604082015181600201559050507f964f593738124387e620e65754eb9c763f00139cecdc1c5a645e75649bef2702858585604051808060200180602001848152602001838103835286818151815260200191508051906020019080838360005b83811015610490578082015181840152602081019050610475565b50505050905090810190601f1680156104bd5780820380516001836020036101000a031916815260200191505b50838103825285818151815260200191508051906020019080838360005b838110156104f65780820151818401526020810190506104db565b50505050905090810190601f1680156105235780820380516001836020036101000a031916815260200191505b509550505050505060405180910390a16040518060400160405280600c81526020017fe6b7bbe58aa0e68890e58a9f00000000000000000000000000000000000000008152509150509392505050565b6060600061057f61075a565b6000846040518082805190602001908083835b602083106105b55780518252602082019150602081019050602083039250610592565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020604051806060016040529081600082018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561068c5780601f106106615761010080835404028352916020019161068c565b820191906000526020600020905b81548152906001019060200180831161066f57829003601f168201915b50505050508152602001600182018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561072e5780601f106107035761010080835404028352916020019161072e565b820191906000526020600020905b81548152906001019060200180831161071157829003601f168201915b505050505081526020016002820154815250509050806020015181604001518191509250925050915091565b60405180606001604052806060815260200160608152602001600081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106107bc57805160ff19168380011785556107ea565b828001600101855582156107ea579182015b828111156107e95782518255916020019190600101906107ce565b5b5090506107f791906107fb565b5090565b61081d91905b80821115610819576000816000905550600101610801565b5090565b9056fea264697066735822122004d00c37c424fb117745f3249342f7062e036410ad3d584a34abcd99eeb2887664736f6c63430006040033';
        return $api->deploySolidity('ceclear_test4', 'test-'.mt_rand(1, 20000), $contractCode);
    }

    private static function asyncSolid()
    {
        $api = new AliLeagueChain();
        $api->setRequestUrl('ForBiz');
//        return $api->asyncSolidity('ceclear_test4', 'test-'.mt_rand(1, 20000), 'add(string,string,uint256)', ['9527','what the fuck',200]);
        return $api->asyncSolidity('ceclear_test4', 'test-'.mt_rand(1, 20000), 'select(string)', ['9527']);
    }

    private static function queryTransaction()
    {
        $api  = new AliLeagueChain();
        $hash = '773939942d54fc3bebcc96f823201a95af0214e4d82d7b6c99acbf9d6648030c';
        return $api->queryTransaction($hash);
    }

    private static function queryReceipt()
    {
        $api  = new AliLeagueChain();
        $hash = '773939942d54fc3bebcc96f823201a95af0214e4d82d7b6c99acbf9d6648030c';
        return $api->queryReceipt($hash);
    }

    private static function parseOutput()
    {
        $api = new AliLeagueChain();
        $api->setRequestUrl('ForBiz');
        $content = 'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAyAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANd2hhdCB0aGUgZnVjawAAAAAAAAAAAAAAAAAAAAAAAAA=';
        return $api->parseOutput($content, ['string','uint256']);
    }


}
